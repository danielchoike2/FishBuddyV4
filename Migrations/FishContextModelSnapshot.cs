// <auto-generated />
using FishBuddy.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FishBuddy.Migrations
{
    [DbContext(typeof(FishContext))]
    partial class FishContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.23")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("FishBuddy.Models.FishLog", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FishName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Fish Name");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("MaxLength")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaxWeight")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Weight");

                    b.HasKey("ID");

                    b.ToTable("FishList");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            FishName = "Largemouth Bass",
                            Location = "Ransom Lake",
                            MaxLength = "27 Inches",
                            MaxWeight = "11.94 Pounds"
                        },
                        new
                        {
                            ID = 2,
                            FishName = "Northern Pike",
                            Location = "Bronson Lake",
                            MaxLength = "51.5 Inches",
                            MaxWeight = "39 Pounds"
                        },
                        new
                        {
                            ID = 3,
                            FishName = "Walleye",
                            Location = "Long Lake",
                            MaxLength = "35 Inches",
                            MaxWeight = "17.19 Pounds"
                        });
                });

            modelBuilder.Entity("FishBuddy.Models.FishLure", b =>
                {
                    b.Property<int>("FishLureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FishLureId"), 1L, 1);

                    b.Property<string>("FishLureName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FishSpeciesId")
                        .HasColumnType("int");

                    b.HasKey("FishLureId");

                    b.HasIndex("FishSpeciesId");

                    b.ToTable("FishLure");

                    b.HasData(
                        new
                        {
                            FishLureId = 1,
                            FishLureName = "Fake Worms, Jigs, Topwater Lures, Paddletail Swimbaits",
                            FishSpeciesId = 1
                        },
                        new
                        {
                            FishLureId = 2,
                            FishLureName = "Tubes, Jigs, Topwater Lures, Paddletail Swimbaits",
                            FishSpeciesId = 2
                        },
                        new
                        {
                            FishLureId = 3,
                            FishLureName = "Spoons, Crankbaits, Jerkbaits, Large Soft Swimbaits",
                            FishSpeciesId = 3
                        },
                        new
                        {
                            FishLureId = 4,
                            FishLureName = "Spoons & Tubes",
                            FishSpeciesId = 4
                        },
                        new
                        {
                            FishLureId = 5,
                            FishLureName = "Crankbaits & Jigs",
                            FishSpeciesId = 5
                        },
                        new
                        {
                            FishLureId = 6,
                            FishLureName = "Spoons, Imitation Eggs, & Spinners",
                            FishSpeciesId = 6
                        },
                        new
                        {
                            FishLureId = 7,
                            FishLureName = "Spoons, Crankbaits, Jerkbaits, Large Soft Swimbaits",
                            FishSpeciesId = 7
                        },
                        new
                        {
                            FishLureId = 8,
                            FishLureName = "Spoons, Imitation Eggs, & Spinners",
                            FishSpeciesId = 8
                        });
                });

            modelBuilder.Entity("FishBuddy.Models.FishSpecies", b =>
                {
                    b.Property<int>("FishSpeciesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FishSpeciesId"), 1L, 1);

                    b.Property<string>("FishCommonName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FishHabitat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FishSpeciesName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordLength")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordWeight")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FishSpeciesId");

                    b.ToTable("FishSpecies");

                    b.HasData(
                        new
                        {
                            FishSpeciesId = 1,
                            FishCommonName = "Largemouth Bass",
                            FishHabitat = "Ponds, Swamps, Lakes, Creeks, Rivers",
                            FishSpeciesName = "Micropterus salmoides",
                            RecordLength = "25.59 inches",
                            RecordWeight = "22 Pounds 4 Ounces"
                        },
                        new
                        {
                            FishSpeciesId = 2,
                            FishCommonName = "Smallmouth Bass",
                            FishHabitat = "Ponds, Lakes, Creeks, Rivers",
                            FishSpeciesName = "Micropterus dolomieu",
                            RecordLength = "27 inches",
                            RecordWeight = "11 Pounds 15 Ounces"
                        },
                        new
                        {
                            FishSpeciesId = 3,
                            FishCommonName = "Northern Pike",
                            FishHabitat = "Ponds, Lakes, Creeks, Rivers",
                            FishSpeciesName = "Esox lucius",
                            RecordLength = "52 Inches",
                            RecordWeight = "55 Pounds"
                        },
                        new
                        {
                            FishSpeciesId = 4,
                            FishCommonName = "Lake Trout",
                            FishHabitat = "Lakes",
                            FishSpeciesName = "Salvelinus namaycush",
                            RecordLength = "47 Inches",
                            RecordWeight = "73 Pounds 29 Ounces"
                        },
                        new
                        {
                            FishSpeciesId = 5,
                            FishCommonName = "Walleye",
                            FishHabitat = "Lakes & Rivers",
                            FishSpeciesName = "Sander vitreus",
                            RecordLength = "41 Inches",
                            RecordWeight = "25 Pounds"
                        },
                        new
                        {
                            FishSpeciesId = 6,
                            FishCommonName = "Steelhead",
                            FishHabitat = "Lakes & Rivers",
                            FishSpeciesName = "Oncorhynchus mykiss",
                            RecordLength = "45 Inches",
                            RecordWeight = "40 Pounds"
                        },
                        new
                        {
                            FishSpeciesId = 7,
                            FishCommonName = "Musky",
                            FishHabitat = "Lakes & Rivers",
                            FishSpeciesName = "Esox masquinongy",
                            RecordLength = "72 Inches",
                            RecordWeight = "70 Pounds"
                        },
                        new
                        {
                            FishSpeciesId = 8,
                            FishCommonName = "King Salmon",
                            FishHabitat = "Lakes & Rivers",
                            FishSpeciesName = "Oncorhynchus tshawytscha",
                            RecordLength = "58 Inches",
                            RecordWeight = "126 Pounds"
                        });
                });

            modelBuilder.Entity("FishBuddy.Models.FishTime", b =>
                {
                    b.Property<int>("FishTimeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FishTimeId"), 1L, 1);

                    b.Property<string>("BestTimes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FishSpeciesId")
                        .HasColumnType("int");

                    b.HasKey("FishTimeId");

                    b.HasIndex("FishSpeciesId");

                    b.ToTable("FishTime");

                    b.HasData(
                        new
                        {
                            FishTimeId = 1,
                            BestTimes = "Dawn & Dusk",
                            FishSpeciesId = 1
                        },
                        new
                        {
                            FishTimeId = 2,
                            BestTimes = "Dawn & Dusk",
                            FishSpeciesId = 2
                        },
                        new
                        {
                            FishTimeId = 3,
                            BestTimes = "Dawn & Dusk",
                            FishSpeciesId = 3
                        },
                        new
                        {
                            FishTimeId = 4,
                            BestTimes = "Dawn & Dusk",
                            FishSpeciesId = 4
                        },
                        new
                        {
                            FishTimeId = 5,
                            BestTimes = "Dawn, Dusk, & Night",
                            FishSpeciesId = 5
                        },
                        new
                        {
                            FishTimeId = 6,
                            BestTimes = "Dawn & Dusk",
                            FishSpeciesId = 6
                        },
                        new
                        {
                            FishTimeId = 7,
                            BestTimes = "Dawn & Dusk",
                            FishSpeciesId = 7
                        },
                        new
                        {
                            FishTimeId = 8,
                            BestTimes = "Dawn & Dusk",
                            FishSpeciesId = 8
                        });
                });

            modelBuilder.Entity("FishBuddy.Models.FishWeather", b =>
                {
                    b.Property<int>("FishWeatherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FishWeatherId"), 1L, 1);

                    b.Property<string>("BestWeathers")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FishSpeciesId")
                        .HasColumnType("int");

                    b.HasKey("FishWeatherId");

                    b.HasIndex("FishSpeciesId");

                    b.ToTable("FishWeather");

                    b.HasData(
                        new
                        {
                            FishWeatherId = 1,
                            BestWeathers = "Cloudy & warmer weather",
                            FishSpeciesId = 1
                        },
                        new
                        {
                            FishWeatherId = 2,
                            BestWeathers = "Cloudy & cooler weather",
                            FishSpeciesId = 2
                        },
                        new
                        {
                            FishWeatherId = 3,
                            BestWeathers = "Cloudy & cooler weather",
                            FishSpeciesId = 3
                        },
                        new
                        {
                            FishWeatherId = 4,
                            BestWeathers = "Cloudy & very cold weather",
                            FishSpeciesId = 4
                        },
                        new
                        {
                            FishWeatherId = 5,
                            BestWeathers = "Cloudy & cooler weather",
                            FishSpeciesId = 5
                        },
                        new
                        {
                            FishWeatherId = 6,
                            BestWeathers = "Cloudy & very cold weather",
                            FishSpeciesId = 6
                        },
                        new
                        {
                            FishWeatherId = 7,
                            BestWeathers = "Cloudy & cooler weather",
                            FishSpeciesId = 7
                        },
                        new
                        {
                            FishWeatherId = 8,
                            BestWeathers = "Cloudy & very cold weather",
                            FishSpeciesId = 8
                        });
                });

            modelBuilder.Entity("FishBuddy.Models.FishLure", b =>
                {
                    b.HasOne("FishBuddy.Models.FishSpecies", "FishSpecies")
                        .WithMany()
                        .HasForeignKey("FishSpeciesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FishSpecies");
                });

            modelBuilder.Entity("FishBuddy.Models.FishTime", b =>
                {
                    b.HasOne("FishBuddy.Models.FishSpecies", "FishSpecies")
                        .WithMany()
                        .HasForeignKey("FishSpeciesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FishSpecies");
                });

            modelBuilder.Entity("FishBuddy.Models.FishWeather", b =>
                {
                    b.HasOne("FishBuddy.Models.FishSpecies", "FishSpecies")
                        .WithMany()
                        .HasForeignKey("FishSpeciesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FishSpecies");
                });
#pragma warning restore 612, 618
        }
    }
}
